<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dazi.spa.modules.client.mapper.CheckRecordMapper">
  <resultMap id="BaseResultMap" type="com.dazi.spa.modules.client.model.CheckRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="prev_time" jdbcType="TIMESTAMP" property="prevTime" />
    <result column="times" jdbcType="INTEGER" property="times" />

    <result column="client_name" jdbcType="VARCHAR" property="clientName" />
  </resultMap>
  <sql id="Base_Column_List">
    scr.id, scr.client_id, scr.create_time, scr.modify_time, scr.prev_time, scr.times
  </sql>
  <sql id="Where_Clause">
     where 1=1 
    <if test="record.id != null">
      and scr.id = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.clientId != null">
      and scr.client_id = #{record.clientId,jdbcType=INTEGER}
    </if>
    <if test="record.createTime != null">
      and scr.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.modifyTime != null">
      and scr.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.prevTime != null">
      and scr.prev_time = #{record.prevTime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.times != null">
      and scr.times = #{record.times,jdbcType=INTEGER}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from spa_check_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from spa_check_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dazi.spa.modules.client.model.CheckRecord">
    insert into spa_check_record (id, client_id, create_time, 
      modify_time, prev_time, times
      )
    values (#{id,jdbcType=INTEGER}, #{clientId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{prevTime,jdbcType=TIMESTAMP}, #{times,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dazi.spa.modules.client.model.CheckRecord">
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into spa_check_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="prevTime != null">
        prev_time,
      </if>
      <if test="times != null">
        times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prevTime != null">
        #{prevTime,jdbcType=TIMESTAMP},
      </if>
      <if test="times != null">
        #{times,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dazi.spa.modules.client.model.CheckRecord">
    update spa_check_record
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prevTime != null">
        prev_time = #{prevTime,jdbcType=TIMESTAMP},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dazi.spa.modules.client.model.CheckRecord">
    update spa_check_record
    set client_id = #{clientId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      prev_time = #{prevTime,jdbcType=TIMESTAMP},
      times = #{times,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotal" parameterType="com.dazi.spa.modules.client.model.CheckRecord" resultType="java.lang.Integer">
    select count(*) from spa_check_record scr
    <include refid="Where_Clause" />
  </select>
  <select id="selectList" parameterType="com.dazi.spa.modules.client.model.CheckRecord" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    , sc.name client_name
     from spa_check_record scr
    left join spa_client sc on scr.client_id=sc.id
    <include refid="Where_Clause" />
    <if test="order != null and order.colName != null and order.colName != ''">
      order by ${order.colName}
      <if test="order.desc">
        desc
      </if>
    </if>
    <if test="count > 0">
      limit #{count} offset #{offset}
    </if>
  </select>
</mapper>